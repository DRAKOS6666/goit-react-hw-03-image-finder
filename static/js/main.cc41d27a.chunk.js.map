{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Button/Button.js","components/Modal/Modal.js","service/fetchImages.js","components/ImageGallery/ImageGallery.js","components/App.js","index.js"],"names":["Searchbar","state","searchText","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","query","onChange","autoComplete","autoFocus","placeholder","Component","Button","loadMore","onClick","Modal","onKeyPressed","closeModal","document","addEventListener","removeEventListener","modalItem","onKeyDown","src","largeImageURL","alt","tags","fetchImages","page","fetch","then","res","json","ImageGallery","images","isLoading","currentPage","isModal","getImages","fetchImage","result","hits","console","log","prevState","catch","err","openModal","id","find","image","toString","code","window","scrollTo","top","documentElement","scrollHeight","behavior","length","map","item","webformatURL","color","height","width","timeout","App","setQuery","text","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cc41d27a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Searchbar extends Component {\r\n  state = { searchText: '' };\r\n\r\n  handleChange = e => {\r\n    this.setState({ searchText: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.searchText);\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\n\r\nexport default function Button({ loadMore }) {\r\n  return (\r\n    <button onClick={loadMore} className=\"Button\">\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n  onKeyPressed = e => {\r\n    this.props.closeModal(e);\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.onKeyPressed);\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.removeEventListener('keydown', this.onKeyPressed);\r\n  }\r\n  //   console.log('modalItem :>> ', modalItem);\r\n  render() {\r\n    const { modalItem, closeModal } = this.props;\r\n    return (\r\n      <div className=\"Overlay\" onKeyDown={closeModal} onClick={closeModal}>\r\n        <div className=\"Modal\">\r\n          <img src={modalItem.largeImageURL} alt={modalItem.tags} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n","export default function fetchImages(query, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=${12}&key=17903714-8f5ebcdc0900c0123ad2db8f4`,\r\n  ).then(res => res.json());\r\n}\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport Button from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport fetchImage from '../../service/fetchImages';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    images: [],\r\n    isLoading: false,\r\n    currentPage: 1,\r\n    isModal: false,\r\n    modalItem: null,\r\n  };\r\n\r\n  getImages = () => {\r\n    const query = this.props.query;\r\n    this.setState({ isLoading: true });\r\n\r\n    fetchImage(query, this.state.currentPage)\r\n      .then(res => {\r\n        const result = res.hits;\r\n        console.log('Response :>> ', res.hits);\r\n        this.setState(prevState => {\r\n          return {\r\n            images: [...prevState.images, ...result],\r\n            isLoading: false,\r\n          };\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.query) {\r\n      this.getImages();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  loadMore = () => {\r\n    this.setState(\r\n      prevState => {\r\n        console.log('prevState :>> ', prevState);\r\n        console.log('currentPageLoadMore >> ', this.state.currentPage);\r\n        console.log('currentPrevPageLoadMore >> ', prevState.currentPage);\r\n        return { currentPage: prevState.currentPage + 1 };\r\n      },\r\n      () => {\r\n        this.getImages();\r\n      },\r\n    );\r\n  };\r\n\r\n  openModal = e => {\r\n    console.log('OpenModalEvent :>> ', typeof e.target.id);\r\n\r\n    const result = this.state.images.find(image => {\r\n      return e.target.id === image.id.toString();\r\n    });\r\n    console.log('result :>> ', result);\r\n    this.setState({\r\n      isModal: true,\r\n      modalItem: result,\r\n    });\r\n  };\r\n\r\n  closeModal = e => {\r\n    console.log('event :>> ', e);\r\n    if (e.type === 'click' && e.target.className === 'Overlay') {\r\n      this.setState({ isModal: false });\r\n    }\r\n    if (e.code === 'Escape') {\r\n      this.setState({ isModal: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading, isModal, modalItem } = this.state;\r\n    return (\r\n      <>\r\n        {images.length > 0 && (\r\n          <ul className=\"ImageGallery\">\r\n            {images.map(item => (\r\n              <li key={item.id} className=\"ImageGalleryItem\">\r\n                <img\r\n                  id={item.id}\r\n                  onClick={this.openModal}\r\n                  className=\"ImageGalleryItem-image\"\r\n                  src={item.webformatURL}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {images.length > 0 ? (\r\n          isLoading ? (\r\n            <Loader\r\n              type=\"TailSpin\"\r\n              color=\"#00BFFF\"\r\n              height={40}\r\n              width={40}\r\n              timeout={3000}\r\n            />\r\n          ) : (\r\n            <Button loadMore={this.loadMore} />\r\n          )\r\n        ) : null}\r\n        {isModal && (\r\n          <Modal modalItem={modalItem} closeModal={this.closeModal} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  setQuery = text => {\r\n    this.setState({ query: text });\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.setQuery} />\r\n        {query && <ImageGallery query={query} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className=\"App\" />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}