{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Button/Button.js","components/Modal/Modal.js","service/fetchImages.js","components/ImageGallery/ImageGallery.js","components/App.js","index.js"],"names":["Searchbar","state","searchText","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","query","onChange","autoComplete","autoFocus","placeholder","Component","Button","loadMore","onClick","modalRoot","document","querySelector","Modal","handleKeyDown","code","closeModal","handleCloseClick","currentTarget","addEventListener","removeEventListener","createPortal","children","fetchImages","page","fetch","then","res","json","ImageGallery","images","isLoading","currentPage","isModal","modalItem","getImages","fetchImage","result","hits","console","log","prevState","catch","err","openModal","find","image","id","toString","window","scrollTo","top","documentElement","scrollHeight","behavior","length","map","item","src","webformatURL","color","height","width","timeout","largeImageURL","alt","tags","App","setQuery","text","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b89f38ba.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Searchbar extends Component {\r\n  state = { searchText: '' };\r\n\r\n  handleChange = e => {\r\n    this.setState({ searchText: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.searchText);\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\n\r\nexport default function Button({ loadMore }) {\r\n  return (\r\n    <button onClick={loadMore} className=\"Button\">\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  handleCloseClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleCloseClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n","export default function fetchImages(query, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=${12}&key=17903714-8f5ebcdc0900c0123ad2db8f4`,\r\n  ).then(res => res.json());\r\n}\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport Button from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport fetchImage from '../../service/fetchImages';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    images: [],\r\n    isLoading: false,\r\n    currentPage: 1,\r\n    isModal: false,\r\n    modalItem: null,\r\n  };\r\n\r\n  getImages = () => {\r\n    const query = this.props.query;\r\n    this.setState({ isLoading: true });\r\n\r\n    fetchImage(query, this.state.currentPage)\r\n      .then(res => {\r\n        const result = res.hits;\r\n        console.log('Response :>> ', res.hits);\r\n        this.setState(prevState => {\r\n          return {\r\n            images: [...prevState.images, ...result],\r\n            isLoading: false,\r\n          };\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.query) {\r\n      this.getImages();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  loadMore = () => {\r\n    this.setState(\r\n      prevState => {\r\n        console.log('prevState :>> ', prevState);\r\n        console.log('currentPageLoadMore >> ', this.state.currentPage);\r\n        console.log('currentPrevPageLoadMore >> ', prevState.currentPage);\r\n        return { currentPage: prevState.currentPage + 1 };\r\n      },\r\n      () => {\r\n        this.getImages();\r\n      },\r\n    );\r\n  };\r\n\r\n  openModal = e => {\r\n    const result = this.state.images.find(image => {\r\n      return e.target.id === image.id.toString();\r\n    });\r\n    this.setState({\r\n      isModal: true,\r\n      modalItem: result,\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ isModal: false });\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading, isModal, modalItem } = this.state;\r\n    return (\r\n      <>\r\n        {images.length > 0 && (\r\n          <ul className=\"ImageGallery\">\r\n            {images.map(item => (\r\n              <li key={item.id} className=\"ImageGalleryItem\">\r\n                <img\r\n                  id={item.id}\r\n                  onClick={this.openModal}\r\n                  className=\"ImageGalleryItem-image\"\r\n                  src={item.webformatURL}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {images.length > 0 ? (\r\n          isLoading ? (\r\n            <Loader\r\n              type=\"TailSpin\"\r\n              color=\"#00BFFF\"\r\n              height={40}\r\n              width={40}\r\n              timeout={3000}\r\n            />\r\n          ) : (\r\n            <Button loadMore={this.loadMore} />\r\n          )\r\n        ) : null}\r\n        {isModal && (\r\n          <Modal closeModal={this.closeModal}>\r\n            <img src={modalItem.largeImageURL} alt={modalItem.tags} />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  setQuery = text => {\r\n    this.setState({ query: text });\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.setQuery} />\r\n        {query && <ImageGallery query={query} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className=\"App\" />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}