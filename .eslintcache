[{"D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\index.js":"1","D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\components\\App.js":"2","D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\components\\Loader\\Loader.js":"3","D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\components\\Button\\Button.js":"4","D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\components\\Searchbar\\Searchbar.js":"5","D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\components\\ImageGallery\\ImageGallery.js":"6","D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\service\\fetchImages.js":"7","D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\components\\Modal\\Modal.js":"8"},{"size":461,"mtime":1606944227854,"results":"9","hashOfConfig":"10"},{"size":509,"mtime":1607893751299,"results":"11","hashOfConfig":"10"},{"size":103,"mtime":1607722382335,"results":"12","hashOfConfig":"10"},{"size":183,"mtime":1607877083736,"results":"13","hashOfConfig":"10"},{"size":1002,"mtime":1607877079100,"results":"14","hashOfConfig":"10"},{"size":3255,"mtime":1607897043609,"results":"15","hashOfConfig":"10"},{"size":253,"mtime":1607877082032,"results":"16","hashOfConfig":"10"},{"size":710,"mtime":1607898780123,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"16hkhsj",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\index.js",[],["37","38"],"D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\components\\App.js",[],"D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\components\\Loader\\Loader.js",[],["39","40"],"D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\components\\Button\\Button.js",[],"D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\components\\Searchbar\\Searchbar.js",[],"D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\components\\ImageGallery\\ImageGallery.js",["41"],"import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport Button from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport fetchImage from '../../service/fetchImages';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    images: [],\r\n    isLoading: false,\r\n    currentPage: 1,\r\n    isModal: false,\r\n    modalItem: null,\r\n  };\r\n\r\n  getImages = () => {\r\n    const query = this.props.query;\r\n    this.setState({ isLoading: true });\r\n\r\n    fetchImage(query, this.state.currentPage)\r\n      .then(res => {\r\n        const result = res.hits;\r\n        console.log('Response :>> ', res.hits);\r\n        this.setState(prevState => {\r\n          return {\r\n            images: [...prevState.images, ...result],\r\n            isLoading: false,\r\n          };\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.query) {\r\n      this.getImages();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  loadMore = () => {\r\n    this.setState(\r\n      prevState => {\r\n        console.log('prevState :>> ', prevState);\r\n        console.log('currentPageLoadMore >> ', this.state.currentPage);\r\n        console.log('currentPrevPageLoadMore >> ', prevState.currentPage);\r\n        return { currentPage: prevState.currentPage + 1 };\r\n      },\r\n      () => {\r\n        this.getImages();\r\n      },\r\n    );\r\n  };\r\n\r\n  openModal = e => {\r\n    console.log('OpenModalEvent :>> ', typeof e.target.id);\r\n\r\n    const result = this.state.images.find(image => {\r\n      return e.target.id === image.id.toString();\r\n    });\r\n    console.log('result :>> ', result);\r\n    this.setState({\r\n      isModal: true,\r\n      modalItem: result,\r\n    });\r\n  };\r\n\r\n  closeModal = e => {\r\n    console.log('event :>> ', e);\r\n    if (e.type === 'click' && e.target.className === 'Overlay') {\r\n      this.setState({ isModal: false });\r\n    }\r\n    if (e.code === 'Escape') {\r\n      this.setState({ isModal: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading, isModal, modalItem } = this.state;\r\n    return (\r\n      <>\r\n        {images.length > 0 && (\r\n          <ul className=\"ImageGallery\">\r\n            {images.map(item => (\r\n              <li key={item.id} className=\"ImageGalleryItem\">\r\n                <img\r\n                  id={item.id}\r\n                  onClick={this.openModal}\r\n                  className=\"ImageGalleryItem-image\"\r\n                  src={item.webformatURL}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {images.length > 0 ? (\r\n          isLoading ? (\r\n            <Loader\r\n              type=\"TailSpin\"\r\n              color=\"#00BFFF\"\r\n              height={40}\r\n              width={40}\r\n              timeout={3000}\r\n            />\r\n          ) : (\r\n            <Button loadMore={this.loadMore} />\r\n          )\r\n        ) : null}\r\n        {isModal && (\r\n          <Modal modalItem={modalItem} closeModal={this.closeModal} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\service\\fetchImages.js",[],"D:\\ОБУЧЕНИЕ\\GoIT\\GoIt_Work\\React\\goit-react-hw-03-image-finder\\src\\components\\Modal\\Modal.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"44","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":97,"column":17,"nodeType":"50","endLine":102,"endColumn":19},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],["51"],["52"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]