{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/Button/Button.js","components/Modal/Modal.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","service/fetchImages.js","components/ImageGallery/ImageGallery.js","components/ErrorBoundary/ErrorBoundary.js","components/App.js","index.js"],"names":["Searchbar","state","searchText","handleChange","e","setState","target","value","handleSubmit","preventDefault","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","Button","loadMore","onClick","modalRoot","document","querySelector","Modal","handleKeyDown","code","closeModal","handleCloseClick","currentTarget","addEventListener","removeEventListener","createPortal","children","ImageGalleryItem","item","openModal","id","src","webformatURL","alt","tags","fetchImages","query","page","fetch","then","res","json","ImageGallery","images","isLoading","currentPage","isModal","modalItem","getImages","fetchImage","hits","forEach","image","console","log","length","prevState","warn","catch","err","imgId","result","find","prevProps","success","window","scrollTo","top","documentElement","scrollHeight","behavior","map","color","height","width","timeout","largeImageURL","ErrorBoundary","isError","info","App","setQuery","text","ReactDOM","render","StrictMode","newestOnTop","rtl","pauseOnFocusLoss","getElementById"],"mappings":"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","file":"static/js/main.a38f6bab.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: propTypes.func.isRequired,\r\n  };\r\n\r\n  state = { searchText: '' };\r\n\r\n  handleChange = e => {\r\n    this.setState({ searchText: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.searchText === '') {\r\n      toast.error('Please enter search query!', {\r\n        position: 'top-right',\r\n        autoClose: 4000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    this.props.onSubmit(this.state.searchText);\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={this.state.searchText}\r\n            onChange={this.handleChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\n function Button({ loadMore }) {\r\n  return (\r\n    <button type=\"button\" onClick={loadMore} className=\"Button\">\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  loadMore: propTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport propTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    closeModal: propTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  handleCloseClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleCloseClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction ImageGalleryItem({ item, openModal }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        id={item.id}\r\n        onClick={() => openModal(item.id)}\r\n        className=\"ImageGalleryItem-image\"\r\n        src={item.webformatURL}\r\n        alt={item.tags}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  item: propTypes.object.isRequired,\r\n  openModal: propTypes.func.isRequired\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","export default function fetchImages(query, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=${12}&key=17903714-8f5ebcdc0900c0123ad2db8f4`,\r\n  ).then(res => res.json());\r\n}\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport Loader from 'react-loader-spinner';\r\nimport Button from './Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\nimport fetchImage from '../../service/fetchImages';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './ImageGallery.scss';\r\n\r\nclass ImageGallery extends Component {\r\n  static propTypes = {\r\n    query: propTypes.string.isRequired,\r\n  };\r\n\r\n  state = {\r\n    images: [],\r\n    isLoading: false,\r\n    currentPage: 1,\r\n    isModal: false,\r\n    modalItem: null,\r\n  };\r\n\r\n  getImages = () => {\r\n    const query = this.props.query;\r\n    this.setState({ isLoading: true });\r\n\r\n    fetchImage(query, this.state.currentPage)\r\n      .then(res => {\r\n        res.hits.forEach(image => console.log(image.id));\r\n        if (res.hits.length > 0) {\r\n          this.setState(prevState => {\r\n            return {\r\n              images: [...prevState.images, ...res.hits],\r\n              isLoading: false,\r\n            };\r\n          });\r\n        } else {\r\n          toast.warn('Nothing found, try another query', {\r\n            position: 'top-right',\r\n            autoClose: 4000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        toast.error('Error, Something went wrong, try again', {\r\n          position: 'top-right',\r\n          autoClose: 4000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: false });\r\n    if (this.props.query !== '') {\r\n      this.getImages();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.query !== prevProps.query) {\r\n      this.setState({ images: [], currentPage: 1 });\r\n      this.getImages();\r\n    }\r\n    if (this.state.currentPage > prevState.currentPage) {\r\n      this.getImages();\r\n    }\r\n\r\n    if (this.state.images.length > prevState.images.length) {\r\n      toast.success('Success!', {\r\n        position: 'top-right',\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  loadMore = () => {\r\n    this.setState(prevState => {\r\n      return { currentPage: prevState.currentPage + 1 };\r\n    });\r\n  };\r\n\r\n  openModal = imgId => {\r\n    const result = this.state.images.find(image => {\r\n      return image.id === imgId;\r\n    });\r\n    this.setState({\r\n      isModal: true,\r\n      modalItem: result,\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ isModal: false });\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading, isModal, modalItem } = this.state;\r\n    return (\r\n      <>\r\n        {images.length > 0 && (\r\n          <ul className=\"ImageGallery\">\r\n            {images.map(item => (\r\n              <ImageGalleryItem\r\n                key={item.id}\r\n                item={item}\r\n                openModal={this.openModal}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {images.length > 0 ? (\r\n          <div className=\"loadMoreContainer\">\r\n            {isLoading ? (\r\n              <Loader\r\n                type=\"TailSpin\"\r\n                color=\"#00BFFF\"\r\n                height={40}\r\n                width={40}\r\n                timeout={4000}\r\n              />\r\n            ) : (\r\n              <Button loadMore={this.loadMore} />\r\n            )}\r\n          </div>\r\n        ) : null}\r\n        {isModal && (\r\n          <Modal closeModal={this.closeModal}>\r\n            <img src={modalItem.largeImageURL} alt={modalItem.tags} />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React, {Component} from 'react';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n    state = {\r\n        isError: false,\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ isError: true });\r\n    }\r\n    \r\n      render() {\r\n        if (this.state.isError) {\r\n          return <h1>Something went wrong, please try again later :(</h1>;\r\n        }\r\n            return this.props.children;\r\n      }\r\n   \r\n}\r\n","import React, { Component } from 'react';\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  setQuery = text => {\r\n    this.setState({ query: text });\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n    return (\r\n      <>\r\n      <ErrorBoundary>\r\n        <Searchbar onSubmit={this.setQuery} />\r\n      </ErrorBoundary>\r\n      <ErrorBoundary>\r\n        {query && <ImageGallery query={query} />}\r\n      </ErrorBoundary>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ToastContainer\r\n      position=\"bottom-center\"\r\n      autoClose={4000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n    />\r\n    <App className=\"App\" />\r\n    <ToastContainer />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}